#!/usr/bin/env python
'''
Autogenerated code using arya
Original Object Document Input: 
{"totalCount":"1","imdata":[{"fvTenant":{"attributes":{"descr":"","dn":"uni/tn-tenant1","name":"tenant1","ownerKey":"","ownerTag":""},"children":[{"vzBrCP":{"attributes":{"descr":"","name":"Con_Ten_SSH","ownerKey":"","ownerTag":"","prio":"unspecified","scope":"tenant"},"children":[{"vzSubj":{"attributes":{"consMatchT":"AtleastOne","descr":"","name":"Sub_SSH","prio":"unspecified","provMatchT":"AtleastOne","revFltPorts":"yes"},"children":[{"vzRsSubjFiltAtt":{"attributes":{"tnVzFilterName":"ssh"}}}]}}]}},{"vzBrCP":{"attributes":{"descr":"","name":"Con_Ten_DB","ownerKey":"","ownerTag":"","prio":"unspecified","scope":"tenant"},"children":[{"vzSubj":{"attributes":{"consMatchT":"AtleastOne","descr":"","name":"Sub_DB","prio":"unspecified","provMatchT":"AtleastOne","revFltPorts":"yes"},"children":[{"vzRsSubjFiltAtt":{"attributes":{"tnVzFilterName":"db"}}}]}}]}},{"vzBrCP":{"attributes":{"descr":"","name":"Con_Ten_ICMP","ownerKey":"","ownerTag":"","prio":"unspecified","scope":"tenant"},"children":[{"vzSubj":{"attributes":{"consMatchT":"AtleastOne","descr":"","name":"Sub_ICMP","prio":"unspecified","provMatchT":"AtleastOne","revFltPorts":"yes"},"children":[{"vzRsSubjFiltAtt":{"attributes":{"tnVzFilterName":"icmp"}}}]}}]}},{"vzBrCP":{"attributes":{"descr":"","name":"Con_Ten_HTTP","ownerKey":"","ownerTag":"","prio":"unspecified","scope":"tenant"},"children":[{"vzSubj":{"attributes":{"consMatchT":"AtleastOne","descr":"","name":"Sub_HTTP","prio":"unspecified","provMatchT":"AtleastOne","revFltPorts":"yes"},"children":[{"vzRsSubjFiltAtt":{"attributes":{"tnVzFilterName":"http"}}}]}}]}},{"vzBrCP":{"attributes":{"descr":"","name":"Con_Ten_RDP","ownerKey":"","ownerTag":"","prio":"unspecified","scope":"tenant"},"children":[{"vzSubj":{"attributes":{"consMatchT":"AtleastOne","descr":"","name":"Sub_RDP","prio":"unspecified","provMatchT":"AtleastOne","revFltPorts":"yes"},"children":[{"vzRsSubjFiltAtt":{"attributes":{"tnVzFilterName":"rdp"}}}]}}]}},{"vzBrCP":{"attributes":{"descr":"","name":"Con_Ten_Linux","ownerKey":"","ownerTag":"","prio":"unspecified","scope":"tenant"},"children":[{"vzSubj":{"attributes":{"consMatchT":"AtleastOne","descr":"","name":"Sub_SSH","prio":"unspecified","provMatchT":"AtleastOne","revFltPorts":"yes"},"children":[{"vzRsSubjFiltAtt":{"attributes":{"tnVzFilterName":"ssh"}}}]}},{"vzSubj":{"attributes":{"consMatchT":"AtleastOne","descr":"","name":"Sub_ICMP","prio":"unspecified","provMatchT":"AtleastOne","revFltPorts":"yes"},"children":[{"vzRsSubjFiltAtt":{"attributes":{"tnVzFilterName":"icmp"}}}]}}]}},{"vzBrCP":{"attributes":{"descr":"","name":"Con_Ten_Windows","ownerKey":"","ownerTag":"","prio":"unspecified","scope":"tenant"},"children":[{"vzSubj":{"attributes":{"consMatchT":"AtleastOne","descr":"","name":"Sub_RDP","prio":"unspecified","provMatchT":"AtleastOne","revFltPorts":"yes"},"children":[{"vzRsSubjFiltAtt":{"attributes":{"tnVzFilterName":"rdp"}}}]}},{"vzSubj":{"attributes":{"consMatchT":"AtleastOne","descr":"","name":"Sub_ICMP","prio":"unspecified","provMatchT":"AtleastOne","revFltPorts":"yes"},"children":[{"vzRsSubjFiltAtt":{"attributes":{"tnVzFilterName":"icmp"}}}]}}]}},{"vnsAbsGraph":{"attributes":{"descr":"","name":"SG_ASAv_Template","ownerKey":"","ownerTag":"","uiTemplateType":"ONE_NODE_FW_ROUTED"},"children":[{"vnsAbsTermNodeCon":{"attributes":{"descr":"","name":"T1","ownerKey":"","ownerTag":""},"children":[{"vnsAbsTermConn":{"attributes":{"attNotify":"no","descr":"","name":"1","ownerKey":"","ownerTag":""}}},{"vnsInTerm":{"attributes":{"descr":"","name":"input-terminal"}}},{"vnsOutTerm":{"attributes":{"descr":"","name":"output-terminal"}}}]}},{"vnsAbsTermNodeProv":{"attributes":{"descr":"","name":"T2","ownerKey":"","ownerTag":""},"children":[{"vnsAbsTermConn":{"attributes":{"attNotify":"no","descr":"","name":"1","ownerKey":"","ownerTag":""}}},{"vnsInTerm":{"attributes":{"descr":"","name":"input-terminal"}}},{"vnsOutTerm":{"attributes":{"descr":"","name":"output-terminal"}}}]}},{"vnsAbsConnection":{"attributes":{"adjType":"L2","connDir":"provider","connType":"external","descr":"","name":"C1","ownerKey":"","ownerTag":"","unicastRoute":"yes"},"children":[{"vnsRsAbsConnectionConns":{"attributes":{"tDn":"uni/tn-tenant1/AbsGraph-SG_ASAv_Template/AbsNode-Firewall/AbsFConn-external"}}},{"vnsRsAbsConnectionConns":{"attributes":{"tDn":"uni/tn-tenant1/AbsGraph-SG_ASAv_Template/AbsTermNodeCon-T1/AbsTConn"}}}]}},{"vnsAbsConnection":{"attributes":{"adjType":"L2","connDir":"provider","connType":"external","descr":"","name":"C2","ownerKey":"","ownerTag":"","unicastRoute":"yes"},"children":[{"vnsRsAbsConnectionConns":{"attributes":{"tDn":"uni/tn-tenant1/AbsGraph-SG_ASAv_Template/AbsTermNodeProv-T2/AbsTConn"}}},{"vnsRsAbsConnectionConns":{"attributes":{"tDn":"uni/tn-tenant1/AbsGraph-SG_ASAv_Template/AbsNode-Firewall/AbsFConn-internal"}}}]}},{"vnsAbsNode":{"attributes":{"descr":"","funcTemplateType":"OTHER","funcType":"GoTo","managed":"yes","name":"Firewall","ownerKey":"","ownerTag":"","sequenceNumber":"0","shareEncap":"no"},"children":[{"vnsAbsFuncConn":{"attributes":{"attNotify":"no","descr":"","name":"external","ownerKey":"","ownerTag":""},"children":[{"vnsRsMConnAtt":{"attributes":{"tDn":"uni/infra/mDev-CISCO-ASA-1.2/mFunc-Firewall/mConn-external"}}}]}},{"vnsAbsFuncConn":{"attributes":{"attNotify":"no","descr":"","name":"internal","ownerKey":"","ownerTag":""},"children":[{"vnsRsMConnAtt":{"attributes":{"tDn":"uni/infra/mDev-CISCO-ASA-1.2/mFunc-Firewall/mConn-internal"}}}]}},{"vnsRsNodeToAbsFuncProf":{"attributes":{"tDn":"uni/infra/mDev-CISCO-ASA-1.2/absFuncProfContr/absFuncProfGrp-WebServiceProfileGroup/absFuncProf-WebPolicyForRoutedMode"}}},{"vnsRsNodeToMFunc":{"attributes":{"tDn":"uni/infra/mDev-CISCO-ASA-1.2/mFunc-Firewall"}}}]}}]}},{"drawCont":{"attributes":{},"children":[{"drawInst":{"attributes":{"info":"{'epg-Ext_L3_OSPF-extInst-cloud':{'x':700,'y':60},'epg-EPG-2-undefined':{'x':428,'y':355},'ctrct_provider-Con_RDP-undefined':{'x':654,'y':487},'ctrct_provider-Con_ICMP-undefined':{'x':525,'y':482},'epg-EPG-1-undefined':{'x':818,'y':353}}","oDn":"uni/tn-tenant1/ap-test-application1"}}}]}},{"fvCtx":{"attributes":{"descr":"","knwMcastAct":"permit","name":"VRF_1","ownerKey":"","ownerTag":"","pcEnfDir":"egress","pcEnfPref":"enforced"},"children":[{"fvRsCtxToExtRouteTagPol":{"attributes":{"tnL3extRouteTagPolName":""}}},{"fvRsBgpCtxPol":{"attributes":{"tnBgpCtxPolName":""}}},{"vzAny":{"attributes":{"descr":"","matchT":"AtleastOne","name":""}}},{"fvRsOspfCtxPol":{"attributes":{"tnOspfCtxPolName":""}}},{"fvRsCtxToEpRet":{"attributes":{"tnFvEpRetPolName":""}}}]}},{"fvBD":{"attributes":{"arpFlood":"no","descr":"","epMoveDetectMode":"","limitIpLearnToSubnets":"yes","llAddr":"::","mac":"00:22:BD:F8:19:FF","multiDstPktAct":"bd-flood","name":"BD_10-54-62-129_29","ownerKey":"","ownerTag":"","unicastRoute":"yes","unkMacUcastAct":"proxy","unkMcastAct":"flood","vmac":"not-applicable"},"children":[{"fvRsBDToNdP":{"attributes":{"tnNdIfPolName":""}}},{"fvRsBDToOut":{"attributes":{"tnL3extOutName":"L3out_External_VRF_1"}}},{"fvRsCtx":{"attributes":{"tnFvCtxName":"VRF_1"}}},{"fvRsIgmpsn":{"attributes":{"tnIgmpSnoopPolName":""}}},{"fvSubnet":{"attributes":{"ctrl":"querier","descr":"","ip":"10.54.62.129/29","name":"","preferred":"no","scope":"public","virtual":"no"}}},{"fvRsBdToEpRet":{"attributes":{"resolveAct":"resolve","tnFvEpRetPolName":""}}}]}},{"fvBD":{"attributes":{"arpFlood":"no","descr":"","epMoveDetectMode":"","limitIpLearnToSubnets":"no","llAddr":"::","mac":"00:22:BD:F8:19:FF","multiDstPktAct":"bd-flood","name":"BD_L3_10-54-63-8_31","ownerKey":"","ownerTag":"","unicastRoute":"yes","unkMacUcastAct":"proxy","unkMcastAct":"flood","vmac":"not-applicable"},"children":[{"fvRsBDToNdP":{"attributes":{"tnNdIfPolName":""}}},{"fvRsBDToOut":{"attributes":{"tnL3extOutName":"L3out_External_VRF_1"}}},{"fvRsCtx":{"attributes":{"tnFvCtxName":"VRF_1"}}},{"fvRsIgmpsn":{"attributes":{"tnIgmpSnoopPolName":""}}},{"fvRsBdToEpRet":{"attributes":{"resolveAct":"resolve","tnFvEpRetPolName":""}}}]}},{"fvBD":{"attributes":{"arpFlood":"no","descr":"","epMoveDetectMode":"","limitIpLearnToSubnets":"yes","llAddr":"::","mac":"00:22:BD:F8:19:FF","multiDstPktAct":"bd-flood","name":"BD_10-54-62-137_29","ownerKey":"","ownerTag":"","unicastRoute":"yes","unkMacUcastAct":"proxy","unkMcastAct":"flood","vmac":"not-applicable"},"children":[{"fvRsBDToNdP":{"attributes":{"tnNdIfPolName":""}}},{"fvRsBDToOut":{"attributes":{"tnL3extOutName":"L3out_External_VRF_1"}}},{"fvRsCtx":{"attributes":{"tnFvCtxName":"VRF_1"}}},{"fvRsIgmpsn":{"attributes":{"tnIgmpSnoopPolName":""}}},{"fvSubnet":{"attributes":{"ctrl":"querier","descr":"","ip":"10.54.62.137/29","name":"","preferred":"no","scope":"public","virtual":"no"}}},{"fvRsBdToEpRet":{"attributes":{"resolveAct":"resolve","tnFvEpRetPolName":""}}}]}},{"fvRsTenantMonPol":{"attributes":{"tnMonEPGPolName":""}}},{"fvAp":{"attributes":{"descr":"","name":"test-application1","ownerKey":"","ownerTag":"","prio":"unspecified"},"children":[{"fvAEPg":{"attributes":{"descr":"","isAttrBasedEPg":"no","matchT":"AtleastOne","name":"EPG-2","prio":"unspecified"},"children":[{"fvRsDomAtt":{"attributes":{"encap":"unknown","instrImedcy":"immediate","resImedcy":"immediate","tDn":"uni/vmmp-VMware/dom-VMM_ACI_vDVS_1"}}},{"fvRsCustQosPol":{"attributes":{"tnQosCustomPolName":""}}},{"fvRsBd":{"attributes":{"tnFvBDName":"BD_10-54-62-137_29"}}},{"vnsFolderInst":{"attributes":{"cardinality":"unspecified","ctrctNameOrLbl":"Con_Allow_Any","devCtxLbl":"","graphNameOrLbl":"SG_ASAv_Template","key":"AccessList","locked":"no","name":"access-list-inbound","nodeNameOrLbl":"Firewall","scopedBy":"epg"},"children":[{"vnsFolderInst":{"attributes":{"cardinality":"unspecified","ctrctNameOrLbl":"Con_Allow_Any","devCtxLbl":"","graphNameOrLbl":"SG_ASAv_Template","key":"AccessControlEntry","locked":"no","name":"permit-http","nodeNameOrLbl":"Firewall","scopedBy":"epg"},"children":[{"vnsParamInst":{"attributes":{"cardinality":"unspecified","key":"action","locked":"no","mandatory":"no","name":"action-permit","validation":"","value":"permit"}}},{"vnsParamInst":{"attributes":{"cardinality":"unspecified","key":"order","locked":"no","mandatory":"no","name":"order1","validation":"","value":"10"}}},{"vnsFolderInst":{"attributes":{"cardinality":"unspecified","ctrctNameOrLbl":"Con_Allow_Any","devCtxLbl":"","graphNameOrLbl":"SG_ASAv_Template","key":"destination_service","locked":"no","name":"dest-service","nodeNameOrLbl":"Firewall","scopedBy":"epg"},"children":[{"vnsParamInst":{"attributes":{"cardinality":"unspecified","key":"operator","locked":"no","mandatory":"no","name":"op","validation":"","value":"eq"}}},{"vnsParamInst":{"attributes":{"cardinality":"unspecified","key":"low_port","locked":"no","mandatory":"no","name":"port","validation":"","value":"http"}}}]}},{"vnsFolderInst":{"attributes":{"cardinality":"unspecified","ctrctNameOrLbl":"Con_Allow_Any","devCtxLbl":"","graphNameOrLbl":"SG_ASAv_Template","key":"source_address","locked":"no","name":"src-address","nodeNameOrLbl":"Firewall","scopedBy":"epg"},"children":[{"vnsParamInst":{"attributes":{"cardinality":"unspecified","key":"any","locked":"no","mandatory":"no","name":"any","validation":"","value":"any"}}}]}},{"vnsFolderInst":{"attributes":{"cardinality":"unspecified","ctrctNameOrLbl":"Con_Allow_Any","devCtxLbl":"","graphNameOrLbl":"SG_ASAv_Template","key":"protocol","locked":"no","name":"tcp","nodeNameOrLbl":"Firewall","scopedBy":"epg"},"children":[{"vnsParamInst":{"attributes":{"cardinality":"unspecified","key":"name_number","locked":"no","mandatory":"no","name":"tcp","validation":"","value":"tcp"}}}]}},{"vnsFolderInst":{"attributes":{"cardinality":"unspecified","ctrctNameOrLbl":"Con_Allow_Any","devCtxLbl":"","graphNameOrLbl":"SG_ASAv_Template","key":"destination_address","locked":"no","name":"dest-address","nodeNameOrLbl":"Firewall","scopedBy":"epg"},"children":[{"vnsParamInst":{"attributes":{"cardinality":"unspecified","key":"any","locked":"no","mandatory":"no","name":"any","validation":"","value":"any"}}}]}}]}},{"vnsFolderInst":{"attributes":{"cardinality":"unspecified","ctrctNameOrLbl":"Con_Allow_Any","devCtxLbl":"","graphNameOrLbl":"SG_ASAv_Template","key":"AccessControlEntry","locked":"no","name":"permit-https","nodeNameOrLbl":"Firewall","scopedBy":"epg"},"children":[{"vnsParamInst":{"attributes":{"cardinality":"unspecified","key":"action","locked":"no","mandatory":"no","name":"action-permit","validation":"","value":"permit"}}},{"vnsParamInst":{"attributes":{"cardinality":"unspecified","key":"order","locked":"no","mandatory":"no","name":"order1","validation":"","value":"10"}}},{"vnsFolderInst":{"attributes":{"cardinality":"unspecified","ctrctNameOrLbl":"Con_Allow_Any","devCtxLbl":"","graphNameOrLbl":"SG_ASAv_Template","key":"destination_service","locked":"no","name":"dest-service","nodeNameOrLbl":"Firewall","scopedBy":"epg"},"children":[{"vnsParamInst":{"attributes":{"cardinality":"unspecified","key":"operator","locked":"no","mandatory":"no","name":"op","validation":"","value":"eq"}}},{"vnsParamInst":{"attributes":{"cardinality":"unspecified","key":"low_port","locked":"no","mandatory":"no","name":"port","validation":"","value":"https"}}}]}},{"vnsFolderInst":{"attributes":{"cardinality":"unspecified","ctrctNameOrLbl":"Con_Allow_Any","devCtxLbl":"","graphNameOrLbl":"SG_ASAv_Template","key":"source_address","locked":"no","name":"src-address","nodeNameOrLbl":"Firewall","scopedBy":"epg"},"children":[{"vnsParamInst":{"attributes":{"cardinality":"unspecified","key":"any","locked":"no","mandatory":"no","name":"any","validation":"","value":"any"}}}]}},{"vnsFolderInst":{"attributes":{"cardinality":"unspecified","ctrctNameOrLbl":"Con_Allow_Any","devCtxLbl":"","graphNameOrLbl":"SG_ASAv_Template","key":"protocol","locked":"no","name":"tcp","nodeNameOrLbl":"Firewall","scopedBy":"epg"},"children":[{"vnsParamInst":{"attributes":{"cardinality":"unspecified","key":"name_number","locked":"no","mandatory":"no","name":"tcp","validation":"","value":"tcp"}}}]}},{"vnsFolderInst":{"attributes":{"cardinality":"unspecified","ctrctNameOrLbl":"Con_Allow_Any","devCtxLbl":"","graphNameOrLbl":"SG_ASAv_Template","key":"destination_address","locked":"no","name":"dest-address","nodeNameOrLbl":"Firewall","scopedBy":"epg"},"children":[{"vnsParamInst":{"attributes":{"cardinality":"unspecified","key":"any","locked":"no","mandatory":"no","name":"any","validation":"","value":"any"}}}]}}]}}]}},{"vnsFolderInst":{"attributes":{"cardinality":"unspecified","ctrctNameOrLbl":"Con_Allow_Any","devCtxLbl":"","graphNameOrLbl":"SG_ASAv_Template","key":"Interface","locked":"no","name":"externalIf","nodeNameOrLbl":"Firewall","scopedBy":"epg"},"children":[{"vnsFolderInst":{"attributes":{"cardinality":"unspecified","ctrctNameOrLbl":"Con_Allow_Any","devCtxLbl":"","graphNameOrLbl":"SG_ASAv_Template","key":"InterfaceConfig","locked":"no","name":"externalIfCfg","nodeNameOrLbl":"Firewall","scopedBy":"epg"},"children":[{"vnsParamInst":{"attributes":{"cardinality":"unspecified","key":"security_level","locked":"no","mandatory":"no","name":"external_security_level","validation":"","value":"50"}}},{"vnsFolderInst":{"attributes":{"cardinality":"unspecified","ctrctNameOrLbl":"Con_Allow_Any","devCtxLbl":"","graphNameOrLbl":"SG_ASAv_Template","key":"IPv4Address","locked":"no","name":"IPv4Address","nodeNameOrLbl":"Firewall","scopedBy":"epg"},"children":[{"vnsParamInst":{"attributes":{"cardinality":"unspecified","key":"ipv4_address","locked":"no","mandatory":"no","name":"ipv4_address","validation":"","value":"10.54.62.131\/29"}}}]}}]}},{"vnsFolderInst":{"attributes":{"cardinality":"unspecified","ctrctNameOrLbl":"Con_Allow_Any","devCtxLbl":"","graphNameOrLbl":"SG_ASAv_Template","key":"AccessGroup","locked":"no","name":"ExtAccessGroup","nodeNameOrLbl":"Firewall","scopedBy":"epg"},"children":[{"vnsCfgRelInst":{"attributes":{"cardinality":"unspecified","key":"inbound_access_list_name","locked":"no","mandatory":"no","name":"name","targetName":"access-list-inbound"}}}]}}]}},{"vnsFolderInst":{"attributes":{"cardinality":"unspecified","ctrctNameOrLbl":"Con_Allow_Any","devCtxLbl":"","graphNameOrLbl":"SG_ASAv_Template","key":"InIntfConfigRelFolder","locked":"no","name":"IntConfig","nodeNameOrLbl":"Firewall","scopedBy":"epg"},"children":[{"vnsCfgRelInst":{"attributes":{"cardinality":"unspecified","key":"InIntfConfigRel","locked":"no","mandatory":"no","name":"InConfigrel","targetName":"internalIf"}}}]}},{"vnsFolderInst":{"attributes":{"cardinality":"unspecified","ctrctNameOrLbl":"Con_Allow_Any","devCtxLbl":"","graphNameOrLbl":"SG_ASAv_Template","key":"Interface","locked":"no","name":"internalIf","nodeNameOrLbl":"Firewall","scopedBy":"epg"},"children":[{"vnsFolderInst":{"attributes":{"cardinality":"unspecified","ctrctNameOrLbl":"Con_Allow_Any","devCtxLbl":"","graphNameOrLbl":"SG_ASAv_Template","key":"InterfaceConfig","locked":"no","name":"internalIfCfg","nodeNameOrLbl":"Firewall","scopedBy":"epg"},"children":[{"vnsParamInst":{"attributes":{"cardinality":"unspecified","key":"security_level","locked":"no","mandatory":"no","name":"internal_security_level","validation":"","value":"100"}}},{"vnsFolderInst":{"attributes":{"cardinality":"unspecified","ctrctNameOrLbl":"Con_Allow_Any","devCtxLbl":"","graphNameOrLbl":"SG_ASAv_Template","key":"IPv4Address","locked":"no","name":"IPv4Address","nodeNameOrLbl":"Firewall","scopedBy":"epg"},"children":[{"vnsParamInst":{"attributes":{"cardinality":"unspecified","key":"ipv4_address","locked":"no","mandatory":"no","name":"ipv4_address","validation":"","value":"10.54.62.139\/29"}}}]}}]}}]}},{"vnsFolderInst":{"attributes":{"cardinality":"unspecified","ctrctNameOrLbl":"Con_Allow_Any","devCtxLbl":"","graphNameOrLbl":"SG_ASAv_Template","key":"ExIntfConfigRelFolder","locked":"no","name":"ExtConfig","nodeNameOrLbl":"Firewall","scopedBy":"epg"},"children":[{"vnsCfgRelInst":{"attributes":{"cardinality":"unspecified","key":"ExIntfConfigRel","locked":"no","mandatory":"no","name":"ExtConfigrel","targetName":"externalIf"}}}]}},{"fvCrtrn":{"attributes":{"descr":"","match":"any","name":"default","ownerKey":"","ownerTag":"","prec":"0"}}},{"fvRsProv":{"attributes":{"matchT":"AtleastOne","prio":"unspecified","tnVzBrCPName":"Con_Ten_Windows"}}},{"fvRsProv":{"attributes":{"matchT":"AtleastOne","prio":"unspecified","tnVzBrCPName":"Con_Ten_DB"}}}]}},{"fvAEPg":{"attributes":{"descr":"","isAttrBasedEPg":"no","matchT":"AtleastOne","name":"EPG-1","prio":"unspecified"},"children":[{"fvRsDomAtt":{"attributes":{"encap":"unknown","instrImedcy":"immediate","resImedcy":"immediate","tDn":"uni/vmmp-VMware/dom-VMM_ACI_vDVS_1"}}},{"fvRsCustQosPol":{"attributes":{"tnQosCustomPolName":""}}},{"fvRsBd":{"attributes":{"tnFvBDName":"BD_10-54-62-129_29"}}},{"fvCrtrn":{"attributes":{"descr":"","match":"any","name":"default","ownerKey":"","ownerTag":"","prec":"0"}}},{"fvRsProv":{"attributes":{"matchT":"AtleastOne","prio":"unspecified","tnVzBrCPName":"Con_Ten_Windows"}}},{"fvRsProv":{"attributes":{"matchT":"AtleastOne","prio":"unspecified","tnVzBrCPName":"Con_Ten_HTTP"}}}]}}]}},{"vnsLDevVip":{"attributes":{"contextAware":"single-Context","devtype":"VIRTUAL","funcType":"GoTo","managed":"yes","mode":"legacy-Mode","name":"ASAv","svcType":"OTHERS"},"children":[{"vnsRsMDevAtt":{"attributes":{"tDn":"uni/infra/mDev-CISCO-ASA-1.2"}}},{"vnsCCred":{"attributes":{"name":"username","value":"admin"}}},{"vnsCCredSecret":{"attributes":{"name":"password"}}},{"vnsRsALDevToDomP":{"attributes":{"tDn":"uni/vmmp-VMware/dom-VMM_ACI_vDVS_1"}}},{"vnsCMgmt":{"attributes":{"host":"10.54.60.248","name":"","port":"443"}}},{"vnsCDev":{"attributes":{"devCtxLbl":"","name":"ASAv_Device_1","vcenterName":"cphlab-vcenter2.cisco.com","vmName":"ACI-ASAv"},"children":[{"vnsCCred":{"attributes":{"name":"username","value":"admin"}}},{"vnsCCredSecret":{"attributes":{"name":"password"}}},{"vnsCMgmt":{"attributes":{"host":"10.54.60.248","name":"","port":"443"}}},{"vnsCIf":{"attributes":{"name":"GigabitEthernet0/1","vnicName":"Network adapter 3"}}},{"vnsCIf":{"attributes":{"name":"GigabitEthernet0/0","vnicName":"Network adapter 2"}}},{"vnsCIf":{"attributes":{"name":"Management0/0","vnicName":"Network adapter 1"}}},{"vnsRsCDevToCtrlrP":{"attributes":{"tDn":"uni/vmmp-VMware/dom-VMM_ACI_vDVS_1/ctrlr-cphlab-vcenter2.cisco.com"}}}]}},{"vnsLIf":{"attributes":{"encap":"unknown","name":"mgmt"},"children":[{"vnsRsMetaIf":{"attributes":{"tDn":"uni/infra/mDev-CISCO-ASA-1.2/mIfLbl-mgmt"}}},{"vnsRsCIfAttN":{"attributes":{"tDn":"uni/tn-tenant1/lDevVip-ASAv/cDev-ASAv_Device_1/cIf-[Management0/0]"}}}]}},{"vnsLIf":{"attributes":{"encap":"unknown","name":"external"},"children":[{"vnsRsMetaIf":{"attributes":{"tDn":"uni/infra/mDev-CISCO-ASA-1.2/mIfLbl-external"}}},{"vnsRsCIfAttN":{"attributes":{"tDn":"uni/tn-tenant1/lDevVip-ASAv/cDev-ASAv_Device_1/cIf-[GigabitEthernet0/1]"}}}]}},{"vnsLIf":{"attributes":{"encap":"unknown","name":"internal"},"children":[{"vnsRsMetaIf":{"attributes":{"tDn":"uni/infra/mDev-CISCO-ASA-1.2/mIfLbl-internal"}}},{"vnsRsCIfAttN":{"attributes":{"tDn":"uni/tn-tenant1/lDevVip-ASAv/cDev-ASAv_Device_1/cIf-[GigabitEthernet0/0]"}}}]}}]}},{"ospfIfPol":{"attributes":{"cost":"unspecified","ctrl":"","deadIntvl":"40","descr":"","helloIntvl":"10","name":"IntPol_OSPF_P2P","nwT":"p2p","ownerKey":"","ownerTag":"","prio":"1","rexmitIntvl":"5","xmitDelay":"1"}}},{"l3extOut":{"attributes":{"descr":"","enforceRtctrl":"export","name":"L3out_External_VRF_1","ownerKey":"","ownerTag":"","targetDscp":"unspecified"},"children":[{"l3extRsEctx":{"attributes":{"tnFvCtxName":"VRF_1"}}},{"l3extLNodeP":{"attributes":{"descr":"","name":"NP_Leaf101","ownerKey":"","ownerTag":"","tag":"yellow-green","targetDscp":"unspecified"},"children":[{"l3extRsNodeL3OutAtt":{"attributes":{"rtrId":"111.111.111.111","rtrIdLoopBack":"yes","tDn":"topology/pod-1/node-101"},"children":[{"l3extLoopBackIfP":{"attributes":{"addr":"111.111.111.111","descr":"","name":""}}}]}},{"l3extLIfP":{"attributes":{"descr":"","name":"IntProf_OSPF","ownerKey":"","ownerTag":"","tag":"yellow-green"},"children":[{"ospfIfP":{"attributes":{"authKeyId":"1","authType":"none","descr":"","name":""},"children":[{"ospfRsIfPol":{"attributes":{"tnOspfIfPolName":"IntPol_OSPF_P2P"}}}]}},{"l3extRsNdIfPol":{"attributes":{"tnNdIfPolName":"default"}}},{"l3extRsPathL3OutAtt":{"attributes":{"addr":"10.54.63.8/31","descr":"","encap":"vlan-1151","encapScope":"local","ifInstT":"sub-interface","llAddr":"::","mac":"00:22:BD:F8:19:FF","mode":"regular","mtu":"9000","tDn":"topology/pod-1/paths-101/pathep-[eth1/48]","targetDscp":"unspecified"}}}]}}]}},{"l3extRsL3DomAtt":{"attributes":{"tDn":"uni/l3dom-L3dom_External"}}},{"l3extInstP":{"attributes":{"descr":"","matchT":"AtleastOne","name":"Ext_L3_OSPF","prio":"unspecified","targetDscp":"unspecified"},"children":[{"fvRsCons":{"attributes":{"prio":"unspecified","tnVzBrCPName":"Con_Ten_Windows"}}},{"fvRsCons":{"attributes":{"prio":"unspecified","tnVzBrCPName":"Con_Ten_HTTP"}}},{"fvRsCons":{"attributes":{"prio":"unspecified","tnVzBrCPName":"Con_Ten_DB"}}},{"l3extSubnet":{"attributes":{"aggregate":"","descr":"","ip":"0.0.0.0/0","name":"","scope":"import-security"}}},{"fvRsCustQosPol":{"attributes":{"tnQosCustomPolName":""}}}]}},{"ospfExtP":{"attributes":{"areaCost":"1","areaCtrl":"redistribute,summary","areaId":"backbone","areaType":"regular","descr":""}}}]}}]}}]}
'''
raise RuntimeError('Please review the auto generated code before ' +
                    'executing the output. Some placeholders will ' +
                    'need to be changed')

# list of packages that should be imported for this code to work
import cobra.mit.access
import cobra.mit.naming
import cobra.mit.request
import cobra.mit.session
import cobra.model.draw
import cobra.model.fv
import cobra.model.l3ext
import cobra.model.ospf
import cobra.model.vns
import cobra.model.vz
from cobra.internal.codec.xmlcodec import toXMLStr

# log into an APIC and create a directory object
ls = cobra.mit.session.LoginSession('https://10.54.61.56', 'admin', 'Cisco123')
md = cobra.mit.access.MoDirectory(ls)
md.login()

# the top level object on which operations will be made
# Confirm the dn below is for your top dn
topDn = cobra.mit.naming.Dn.fromString('uni/tn-tenant1')
topParentDn = topDn.getParent()
topMo = md.lookupByDn(topParentDn)

# build the request using cobra syntax
fvTenant = cobra.model.fv.Tenant(topMo, ownerKey=u'', name=u'tenant1', descr=u'', ownerTag=u'')
vzBrCP = cobra.model.vz.BrCP(fvTenant, ownerKey=u'', name=u'Con_Ten_SSH', prio=u'unspecified', ownerTag=u'', descr=u'')
vzSubj = cobra.model.vz.Subj(vzBrCP, revFltPorts=u'yes', name=u'Sub_SSH', prio=u'unspecified', descr=u'', consMatchT=u'AtleastOne', provMatchT=u'AtleastOne')
vzRsSubjFiltAtt = cobra.model.vz.RsSubjFiltAtt(vzSubj, tnVzFilterName=u'ssh')
vzBrCP2 = cobra.model.vz.BrCP(fvTenant, ownerKey=u'', name=u'Con_Ten_DB', prio=u'unspecified', ownerTag=u'', descr=u'')
vzSubj2 = cobra.model.vz.Subj(vzBrCP2, revFltPorts=u'yes', name=u'Sub_DB', prio=u'unspecified', descr=u'', consMatchT=u'AtleastOne', provMatchT=u'AtleastOne')
vzRsSubjFiltAtt2 = cobra.model.vz.RsSubjFiltAtt(vzSubj2, tnVzFilterName=u'db')
vzBrCP3 = cobra.model.vz.BrCP(fvTenant, ownerKey=u'', name=u'Con_Ten_ICMP', prio=u'unspecified', ownerTag=u'', descr=u'')
vzSubj3 = cobra.model.vz.Subj(vzBrCP3, revFltPorts=u'yes', name=u'Sub_ICMP', prio=u'unspecified', descr=u'', consMatchT=u'AtleastOne', provMatchT=u'AtleastOne')
vzRsSubjFiltAtt3 = cobra.model.vz.RsSubjFiltAtt(vzSubj3, tnVzFilterName=u'icmp')
vzBrCP4 = cobra.model.vz.BrCP(fvTenant, ownerKey=u'', name=u'Con_Ten_HTTP', prio=u'unspecified', ownerTag=u'', descr=u'')
vzSubj4 = cobra.model.vz.Subj(vzBrCP4, revFltPorts=u'yes', name=u'Sub_HTTP', prio=u'unspecified', descr=u'', consMatchT=u'AtleastOne', provMatchT=u'AtleastOne')
vzRsSubjFiltAtt4 = cobra.model.vz.RsSubjFiltAtt(vzSubj4, tnVzFilterName=u'http')
vzBrCP5 = cobra.model.vz.BrCP(fvTenant, ownerKey=u'', name=u'Con_Ten_RDP', prio=u'unspecified', ownerTag=u'', descr=u'')
vzSubj5 = cobra.model.vz.Subj(vzBrCP5, revFltPorts=u'yes', name=u'Sub_RDP', prio=u'unspecified', descr=u'', consMatchT=u'AtleastOne', provMatchT=u'AtleastOne')
vzRsSubjFiltAtt5 = cobra.model.vz.RsSubjFiltAtt(vzSubj5, tnVzFilterName=u'rdp')
vzBrCP6 = cobra.model.vz.BrCP(fvTenant, ownerKey=u'', name=u'Con_Ten_Linux', prio=u'unspecified', ownerTag=u'', descr=u'')
vzSubj6 = cobra.model.vz.Subj(vzBrCP6, revFltPorts=u'yes', name=u'Sub_SSH', prio=u'unspecified', descr=u'', consMatchT=u'AtleastOne', provMatchT=u'AtleastOne')
vzRsSubjFiltAtt6 = cobra.model.vz.RsSubjFiltAtt(vzSubj6, tnVzFilterName=u'ssh')
vzSubj7 = cobra.model.vz.Subj(vzBrCP6, revFltPorts=u'yes', name=u'Sub_ICMP', prio=u'unspecified', descr=u'', consMatchT=u'AtleastOne', provMatchT=u'AtleastOne')
vzRsSubjFiltAtt7 = cobra.model.vz.RsSubjFiltAtt(vzSubj7, tnVzFilterName=u'icmp')
vzBrCP7 = cobra.model.vz.BrCP(fvTenant, ownerKey=u'', name=u'Con_Ten_Windows', prio=u'unspecified', ownerTag=u'', descr=u'')
vzSubj8 = cobra.model.vz.Subj(vzBrCP7, revFltPorts=u'yes', name=u'Sub_RDP', prio=u'unspecified', descr=u'', consMatchT=u'AtleastOne', provMatchT=u'AtleastOne')
vzRsSubjFiltAtt8 = cobra.model.vz.RsSubjFiltAtt(vzSubj8, tnVzFilterName=u'rdp')
vzSubj9 = cobra.model.vz.Subj(vzBrCP7, revFltPorts=u'yes', name=u'Sub_ICMP', prio=u'unspecified', descr=u'', consMatchT=u'AtleastOne', provMatchT=u'AtleastOne')
vzRsSubjFiltAtt9 = cobra.model.vz.RsSubjFiltAtt(vzSubj9, tnVzFilterName=u'icmp')
vnsAbsGraph = cobra.model.vns.AbsGraph(fvTenant, uiTemplateType=u'ONE_NODE_FW_ROUTED', ownerKey=u'', name=u'SG_ASAv_Template', descr=u'', ownerTag=u'')
vnsAbsTermNodeCon = cobra.model.vns.AbsTermNodeCon(vnsAbsGraph, ownerKey=u'', name=u'T1', descr=u'', ownerTag=u'')
vnsAbsTermConn = cobra.model.vns.AbsTermConn(vnsAbsTermNodeCon, ownerKey=u'', attNotify=u'no', name=u'1', descr=u'', ownerTag=u'')
vnsInTerm = cobra.model.vns.InTerm(vnsAbsTermNodeCon, name=u'input-terminal', descr=u'')
vnsOutTerm = cobra.model.vns.OutTerm(vnsAbsTermNodeCon, name=u'output-terminal', descr=u'')
vnsAbsTermNodeProv = cobra.model.vns.AbsTermNodeProv(vnsAbsGraph, ownerKey=u'', name=u'T2', descr=u'', ownerTag=u'')
vnsAbsTermConn2 = cobra.model.vns.AbsTermConn(vnsAbsTermNodeProv, ownerKey=u'', attNotify=u'no', name=u'1', descr=u'', ownerTag=u'')
vnsInTerm2 = cobra.model.vns.InTerm(vnsAbsTermNodeProv, name=u'input-terminal', descr=u'')
vnsOutTerm2 = cobra.model.vns.OutTerm(vnsAbsTermNodeProv, name=u'output-terminal', descr=u'')
vnsAbsConnection = cobra.model.vns.AbsConnection(vnsAbsGraph, adjType=u'L2', ownerKey=u'', name=u'C1', descr=u'', connDir=u'provider', connType=u'external', unicastRoute=u'yes', ownerTag=u'')
vnsRsAbsConnectionConns = cobra.model.vns.RsAbsConnectionConns(vnsAbsConnection, tDn=u'uni/tn-tenant1/AbsGraph-SG_ASAv_Template/AbsNode-Firewall/AbsFConn-external')
vnsRsAbsConnectionConns2 = cobra.model.vns.RsAbsConnectionConns(vnsAbsConnection, tDn=u'uni/tn-tenant1/AbsGraph-SG_ASAv_Template/AbsTermNodeCon-T1/AbsTConn')
vnsAbsConnection2 = cobra.model.vns.AbsConnection(vnsAbsGraph, adjType=u'L2', ownerKey=u'', name=u'C2', descr=u'', connDir=u'provider', connType=u'external', unicastRoute=u'yes', ownerTag=u'')
vnsRsAbsConnectionConns3 = cobra.model.vns.RsAbsConnectionConns(vnsAbsConnection2, tDn=u'uni/tn-tenant1/AbsGraph-SG_ASAv_Template/AbsTermNodeProv-T2/AbsTConn')
vnsRsAbsConnectionConns4 = cobra.model.vns.RsAbsConnectionConns(vnsAbsConnection2, tDn=u'uni/tn-tenant1/AbsGraph-SG_ASAv_Template/AbsNode-Firewall/AbsFConn-internal')
vnsAbsNode = cobra.model.vns.AbsNode(vnsAbsGraph, funcTemplateType=u'OTHER', ownerKey=u'', managed=u'yes', name=u'Firewall', descr=u'', funcType=u'GoTo', shareEncap=u'no', sequenceNumber=u'0', ownerTag=u'')
vnsAbsFuncConn = cobra.model.vns.AbsFuncConn(vnsAbsNode, ownerKey=u'', attNotify=u'no', name=u'external', descr=u'', ownerTag=u'')
vnsRsMConnAtt = cobra.model.vns.RsMConnAtt(vnsAbsFuncConn, tDn=u'uni/infra/mDev-CISCO-ASA-1.2/mFunc-Firewall/mConn-external')
vnsAbsFuncConn2 = cobra.model.vns.AbsFuncConn(vnsAbsNode, ownerKey=u'', attNotify=u'no', name=u'internal', descr=u'', ownerTag=u'')
vnsRsMConnAtt2 = cobra.model.vns.RsMConnAtt(vnsAbsFuncConn2, tDn=u'uni/infra/mDev-CISCO-ASA-1.2/mFunc-Firewall/mConn-internal')
vnsRsNodeToAbsFuncProf = cobra.model.vns.RsNodeToAbsFuncProf(vnsAbsNode, tDn=u'uni/infra/mDev-CISCO-ASA-1.2/absFuncProfContr/absFuncProfGrp-WebServiceProfileGroup/absFuncProf-WebPolicyForRoutedMode')
vnsRsNodeToMFunc = cobra.model.vns.RsNodeToMFunc(vnsAbsNode, tDn=u'uni/infra/mDev-CISCO-ASA-1.2/mFunc-Firewall')
drawCont = cobra.model.draw.Cont(fvTenant)
drawInst = cobra.model.draw.Inst(drawCont, info=u"{'epg-Ext_L3_OSPF-extInst-cloud':{'x':700,'y':60},'epg-EPG-2-undefined':{'x':428,'y':355},'ctrct_provider-Con_RDP-undefined':{'x':654,'y':487},'ctrct_provider-Con_ICMP-undefined':{'x':525,'y':482},'epg-EPG-1-undefined':{'x':818,'y':353}}", oDn=u'uni/tn-tenant1/ap-test-application1')
fvCtx = cobra.model.fv.Ctx(fvTenant, ownerKey=u'', name=u'VRF_1', descr=u'', knwMcastAct=u'permit', pcEnfDir=u'egress', ownerTag=u'', pcEnfPref=u'enforced')
fvRsCtxToExtRouteTagPol = cobra.model.fv.RsCtxToExtRouteTagPol(fvCtx, tnL3extRouteTagPolName=u'')
fvRsBgpCtxPol = cobra.model.fv.RsBgpCtxPol(fvCtx, tnBgpCtxPolName=u'')
vzAny = cobra.model.vz.Any(fvCtx, matchT=u'AtleastOne', name=u'', descr=u'')
fvRsOspfCtxPol = cobra.model.fv.RsOspfCtxPol(fvCtx, tnOspfCtxPolName=u'')
fvRsCtxToEpRet = cobra.model.fv.RsCtxToEpRet(fvCtx, tnFvEpRetPolName=u'')
fvBD = cobra.model.fv.BD(fvTenant, ownerKey=u'', vmac=u'not-applicable', name=u'BD_10-54-62-129_29', descr=u'', unkMacUcastAct=u'proxy', arpFlood=u'no', limitIpLearnToSubnets=u'yes', llAddr=u'::', mac=u'00:22:BD:F8:19:FF', epMoveDetectMode=u'', unicastRoute=u'yes', ownerTag=u'', multiDstPktAct=u'bd-flood', unkMcastAct=u'flood')
fvRsBDToNdP = cobra.model.fv.RsBDToNdP(fvBD, tnNdIfPolName=u'')
fvRsBDToOut = cobra.model.fv.RsBDToOut(fvBD, tnL3extOutName=u'L3out_External_VRF_1')
fvRsCtx = cobra.model.fv.RsCtx(fvBD, tnFvCtxName=u'VRF_1')
fvRsIgmpsn = cobra.model.fv.RsIgmpsn(fvBD, tnIgmpSnoopPolName=u'')
fvSubnet = cobra.model.fv.Subnet(fvBD, name=u'', descr=u'', ctrl=u'querier', ip=u'10.54.62.129/29', preferred=u'no', virtual=u'no')
fvRsBdToEpRet = cobra.model.fv.RsBdToEpRet(fvBD, resolveAct=u'resolve', tnFvEpRetPolName=u'')
fvBD2 = cobra.model.fv.BD(fvTenant, ownerKey=u'', vmac=u'not-applicable', name=u'BD_L3_10-54-63-8_31', descr=u'', unkMacUcastAct=u'proxy', arpFlood=u'no', limitIpLearnToSubnets=u'no', llAddr=u'::', mac=u'00:22:BD:F8:19:FF', epMoveDetectMode=u'', unicastRoute=u'yes', ownerTag=u'', multiDstPktAct=u'bd-flood', unkMcastAct=u'flood')
fvRsBDToNdP2 = cobra.model.fv.RsBDToNdP(fvBD2, tnNdIfPolName=u'')
fvRsBDToOut2 = cobra.model.fv.RsBDToOut(fvBD2, tnL3extOutName=u'L3out_External_VRF_1')
fvRsCtx2 = cobra.model.fv.RsCtx(fvBD2, tnFvCtxName=u'VRF_1')
fvRsIgmpsn2 = cobra.model.fv.RsIgmpsn(fvBD2, tnIgmpSnoopPolName=u'')
fvRsBdToEpRet2 = cobra.model.fv.RsBdToEpRet(fvBD2, resolveAct=u'resolve', tnFvEpRetPolName=u'')
fvBD3 = cobra.model.fv.BD(fvTenant, ownerKey=u'', vmac=u'not-applicable', name=u'BD_10-54-62-137_29', descr=u'', unkMacUcastAct=u'proxy', arpFlood=u'no', limitIpLearnToSubnets=u'yes', llAddr=u'::', mac=u'00:22:BD:F8:19:FF', epMoveDetectMode=u'', unicastRoute=u'yes', ownerTag=u'', multiDstPktAct=u'bd-flood', unkMcastAct=u'flood')
fvRsBDToNdP3 = cobra.model.fv.RsBDToNdP(fvBD3, tnNdIfPolName=u'')
fvRsBDToOut3 = cobra.model.fv.RsBDToOut(fvBD3, tnL3extOutName=u'L3out_External_VRF_1')
fvRsCtx3 = cobra.model.fv.RsCtx(fvBD3, tnFvCtxName=u'VRF_1')
fvRsIgmpsn3 = cobra.model.fv.RsIgmpsn(fvBD3, tnIgmpSnoopPolName=u'')
fvSubnet2 = cobra.model.fv.Subnet(fvBD3, name=u'', descr=u'', ctrl=u'querier', ip=u'10.54.62.137/29', preferred=u'no', virtual=u'no')
fvRsBdToEpRet3 = cobra.model.fv.RsBdToEpRet(fvBD3, resolveAct=u'resolve', tnFvEpRetPolName=u'')
fvRsTenantMonPol = cobra.model.fv.RsTenantMonPol(fvTenant, tnMonEPGPolName=u'')
fvAp = cobra.model.fv.Ap(fvTenant, ownerKey=u'', prio=u'unspecified', name=u'test-application1', descr=u'', ownerTag=u'')
fvAEPg = cobra.model.fv.AEPg(fvAp, isAttrBasedEPg=u'no', matchT=u'AtleastOne', prio=u'unspecified', name=u'EPG-2', descr=u'')
fvRsDomAtt = cobra.model.fv.RsDomAtt(fvAEPg, instrImedcy=u'immediate', resImedcy=u'immediate', encap=u'unknown', tDn=u'uni/vmmp-VMware/dom-VMM_ACI_vDVS_1')
fvRsCustQosPol = cobra.model.fv.RsCustQosPol(fvAEPg, tnQosCustomPolName=u'')
fvRsBd = cobra.model.fv.RsBd(fvAEPg, tnFvBDName=u'BD_10-54-62-137_29')
vnsFolderInst = cobra.model.vns.FolderInst(fvAEPg, locked=u'no', graphNameOrLbl=u'SG_ASAv_Template', devCtxLbl=u'', ctrctNameOrLbl=u'Con_Allow_Any', scopedBy=u'epg', key=u'AccessList', cardinality=u'unspecified', nodeNameOrLbl=u'Firewall', name=u'access-list-inbound')
vnsFolderInst2 = cobra.model.vns.FolderInst(vnsFolderInst, locked=u'no', graphNameOrLbl=u'SG_ASAv_Template', devCtxLbl=u'', ctrctNameOrLbl=u'Con_Allow_Any', scopedBy=u'epg', key=u'AccessControlEntry', cardinality=u'unspecified', nodeNameOrLbl=u'Firewall', name=u'permit-http')
vnsParamInst = cobra.model.vns.ParamInst(vnsFolderInst2, validation=u'', mandatory=u'no', name=u'action-permit', value=u'permit', key=u'action', locked=u'no', cardinality=u'unspecified')
vnsParamInst2 = cobra.model.vns.ParamInst(vnsFolderInst2, validation=u'', mandatory=u'no', name=u'order1', value=u'10', key=u'order', locked=u'no', cardinality=u'unspecified')
vnsFolderInst3 = cobra.model.vns.FolderInst(vnsFolderInst2, locked=u'no', graphNameOrLbl=u'SG_ASAv_Template', devCtxLbl=u'', ctrctNameOrLbl=u'Con_Allow_Any', scopedBy=u'epg', key=u'destination_service', cardinality=u'unspecified', nodeNameOrLbl=u'Firewall', name=u'dest-service')
vnsParamInst3 = cobra.model.vns.ParamInst(vnsFolderInst3, validation=u'', mandatory=u'no', name=u'op', value=u'eq', key=u'operator', locked=u'no', cardinality=u'unspecified')
vnsParamInst4 = cobra.model.vns.ParamInst(vnsFolderInst3, validation=u'', mandatory=u'no', name=u'port', value=u'http', key=u'low_port', locked=u'no', cardinality=u'unspecified')
vnsFolderInst4 = cobra.model.vns.FolderInst(vnsFolderInst2, locked=u'no', graphNameOrLbl=u'SG_ASAv_Template', devCtxLbl=u'', ctrctNameOrLbl=u'Con_Allow_Any', scopedBy=u'epg', key=u'source_address', cardinality=u'unspecified', nodeNameOrLbl=u'Firewall', name=u'src-address')
vnsParamInst5 = cobra.model.vns.ParamInst(vnsFolderInst4, validation=u'', mandatory=u'no', name=u'any', value=u'any', key=u'any', locked=u'no', cardinality=u'unspecified')
vnsFolderInst5 = cobra.model.vns.FolderInst(vnsFolderInst2, locked=u'no', graphNameOrLbl=u'SG_ASAv_Template', devCtxLbl=u'', ctrctNameOrLbl=u'Con_Allow_Any', scopedBy=u'epg', key=u'protocol', cardinality=u'unspecified', nodeNameOrLbl=u'Firewall', name=u'tcp')
vnsParamInst6 = cobra.model.vns.ParamInst(vnsFolderInst5, validation=u'', mandatory=u'no', name=u'tcp', value=u'tcp', key=u'name_number', locked=u'no', cardinality=u'unspecified')
vnsFolderInst6 = cobra.model.vns.FolderInst(vnsFolderInst2, locked=u'no', graphNameOrLbl=u'SG_ASAv_Template', devCtxLbl=u'', ctrctNameOrLbl=u'Con_Allow_Any', scopedBy=u'epg', key=u'destination_address', cardinality=u'unspecified', nodeNameOrLbl=u'Firewall', name=u'dest-address')
vnsParamInst7 = cobra.model.vns.ParamInst(vnsFolderInst6, validation=u'', mandatory=u'no', name=u'any', value=u'any', key=u'any', locked=u'no', cardinality=u'unspecified')
vnsFolderInst7 = cobra.model.vns.FolderInst(vnsFolderInst, locked=u'no', graphNameOrLbl=u'SG_ASAv_Template', devCtxLbl=u'', ctrctNameOrLbl=u'Con_Allow_Any', scopedBy=u'epg', key=u'AccessControlEntry', cardinality=u'unspecified', nodeNameOrLbl=u'Firewall', name=u'permit-https')
vnsParamInst8 = cobra.model.vns.ParamInst(vnsFolderInst7, validation=u'', mandatory=u'no', name=u'action-permit', value=u'permit', key=u'action', locked=u'no', cardinality=u'unspecified')
vnsParamInst9 = cobra.model.vns.ParamInst(vnsFolderInst7, validation=u'', mandatory=u'no', name=u'order1', value=u'10', key=u'order', locked=u'no', cardinality=u'unspecified')
vnsFolderInst8 = cobra.model.vns.FolderInst(vnsFolderInst7, locked=u'no', graphNameOrLbl=u'SG_ASAv_Template', devCtxLbl=u'', ctrctNameOrLbl=u'Con_Allow_Any', scopedBy=u'epg', key=u'destination_service', cardinality=u'unspecified', nodeNameOrLbl=u'Firewall', name=u'dest-service')
vnsParamInst10 = cobra.model.vns.ParamInst(vnsFolderInst8, validation=u'', mandatory=u'no', name=u'op', value=u'eq', key=u'operator', locked=u'no', cardinality=u'unspecified')
vnsParamInst11 = cobra.model.vns.ParamInst(vnsFolderInst8, validation=u'', mandatory=u'no', name=u'port', value=u'https', key=u'low_port', locked=u'no', cardinality=u'unspecified')
vnsFolderInst9 = cobra.model.vns.FolderInst(vnsFolderInst7, locked=u'no', graphNameOrLbl=u'SG_ASAv_Template', devCtxLbl=u'', ctrctNameOrLbl=u'Con_Allow_Any', scopedBy=u'epg', key=u'source_address', cardinality=u'unspecified', nodeNameOrLbl=u'Firewall', name=u'src-address')
vnsParamInst12 = cobra.model.vns.ParamInst(vnsFolderInst9, validation=u'', mandatory=u'no', name=u'any', value=u'any', key=u'any', locked=u'no', cardinality=u'unspecified')
vnsFolderInst10 = cobra.model.vns.FolderInst(vnsFolderInst7, locked=u'no', graphNameOrLbl=u'SG_ASAv_Template', devCtxLbl=u'', ctrctNameOrLbl=u'Con_Allow_Any', scopedBy=u'epg', key=u'protocol', cardinality=u'unspecified', nodeNameOrLbl=u'Firewall', name=u'tcp')
vnsParamInst13 = cobra.model.vns.ParamInst(vnsFolderInst10, validation=u'', mandatory=u'no', name=u'tcp', value=u'tcp', key=u'name_number', locked=u'no', cardinality=u'unspecified')
vnsFolderInst11 = cobra.model.vns.FolderInst(vnsFolderInst7, locked=u'no', graphNameOrLbl=u'SG_ASAv_Template', devCtxLbl=u'', ctrctNameOrLbl=u'Con_Allow_Any', scopedBy=u'epg', key=u'destination_address', cardinality=u'unspecified', nodeNameOrLbl=u'Firewall', name=u'dest-address')
vnsParamInst14 = cobra.model.vns.ParamInst(vnsFolderInst11, validation=u'', mandatory=u'no', name=u'any', value=u'any', key=u'any', locked=u'no', cardinality=u'unspecified')
vnsFolderInst12 = cobra.model.vns.FolderInst(fvAEPg, locked=u'no', graphNameOrLbl=u'SG_ASAv_Template', devCtxLbl=u'', ctrctNameOrLbl=u'Con_Allow_Any', scopedBy=u'epg', key=u'Interface', cardinality=u'unspecified', nodeNameOrLbl=u'Firewall', name=u'externalIf')
vnsFolderInst13 = cobra.model.vns.FolderInst(vnsFolderInst12, locked=u'no', graphNameOrLbl=u'SG_ASAv_Template', devCtxLbl=u'', ctrctNameOrLbl=u'Con_Allow_Any', scopedBy=u'epg', key=u'InterfaceConfig', cardinality=u'unspecified', nodeNameOrLbl=u'Firewall', name=u'externalIfCfg')
vnsParamInst15 = cobra.model.vns.ParamInst(vnsFolderInst13, validation=u'', mandatory=u'no', name=u'external_security_level', value=u'50', key=u'security_level', locked=u'no', cardinality=u'unspecified')
vnsFolderInst14 = cobra.model.vns.FolderInst(vnsFolderInst13, locked=u'no', graphNameOrLbl=u'SG_ASAv_Template', devCtxLbl=u'', ctrctNameOrLbl=u'Con_Allow_Any', scopedBy=u'epg', key=u'IPv4Address', cardinality=u'unspecified', nodeNameOrLbl=u'Firewall', name=u'IPv4Address')
vnsParamInst16 = cobra.model.vns.ParamInst(vnsFolderInst14, validation=u'', mandatory=u'no', name=u'ipv4_address', value=u'10.54.62.131/29', key=u'ipv4_address', locked=u'no', cardinality=u'unspecified')
vnsFolderInst15 = cobra.model.vns.FolderInst(vnsFolderInst12, locked=u'no', graphNameOrLbl=u'SG_ASAv_Template', devCtxLbl=u'', ctrctNameOrLbl=u'Con_Allow_Any', scopedBy=u'epg', key=u'AccessGroup', cardinality=u'unspecified', nodeNameOrLbl=u'Firewall', name=u'ExtAccessGroup')
vnsCfgRelInst = cobra.model.vns.CfgRelInst(vnsFolderInst15, mandatory=u'no', name=u'name', key=u'inbound_access_list_name', locked=u'no', cardinality=u'unspecified', targetName=u'access-list-inbound')
vnsFolderInst16 = cobra.model.vns.FolderInst(fvAEPg, locked=u'no', graphNameOrLbl=u'SG_ASAv_Template', devCtxLbl=u'', ctrctNameOrLbl=u'Con_Allow_Any', scopedBy=u'epg', key=u'InIntfConfigRelFolder', cardinality=u'unspecified', nodeNameOrLbl=u'Firewall', name=u'IntConfig')
vnsCfgRelInst2 = cobra.model.vns.CfgRelInst(vnsFolderInst16, mandatory=u'no', name=u'InConfigrel', key=u'InIntfConfigRel', locked=u'no', cardinality=u'unspecified', targetName=u'internalIf')
vnsFolderInst17 = cobra.model.vns.FolderInst(fvAEPg, locked=u'no', graphNameOrLbl=u'SG_ASAv_Template', devCtxLbl=u'', ctrctNameOrLbl=u'Con_Allow_Any', scopedBy=u'epg', key=u'Interface', cardinality=u'unspecified', nodeNameOrLbl=u'Firewall', name=u'internalIf')
vnsFolderInst18 = cobra.model.vns.FolderInst(vnsFolderInst17, locked=u'no', graphNameOrLbl=u'SG_ASAv_Template', devCtxLbl=u'', ctrctNameOrLbl=u'Con_Allow_Any', scopedBy=u'epg', key=u'InterfaceConfig', cardinality=u'unspecified', nodeNameOrLbl=u'Firewall', name=u'internalIfCfg')
vnsParamInst17 = cobra.model.vns.ParamInst(vnsFolderInst18, validation=u'', mandatory=u'no', name=u'internal_security_level', value=u'100', key=u'security_level', locked=u'no', cardinality=u'unspecified')
vnsFolderInst19 = cobra.model.vns.FolderInst(vnsFolderInst18, locked=u'no', graphNameOrLbl=u'SG_ASAv_Template', devCtxLbl=u'', ctrctNameOrLbl=u'Con_Allow_Any', scopedBy=u'epg', key=u'IPv4Address', cardinality=u'unspecified', nodeNameOrLbl=u'Firewall', name=u'IPv4Address')
vnsParamInst18 = cobra.model.vns.ParamInst(vnsFolderInst19, validation=u'', mandatory=u'no', name=u'ipv4_address', value=u'10.54.62.139/29', key=u'ipv4_address', locked=u'no', cardinality=u'unspecified')
vnsFolderInst20 = cobra.model.vns.FolderInst(fvAEPg, locked=u'no', graphNameOrLbl=u'SG_ASAv_Template', devCtxLbl=u'', ctrctNameOrLbl=u'Con_Allow_Any', scopedBy=u'epg', key=u'ExIntfConfigRelFolder', cardinality=u'unspecified', nodeNameOrLbl=u'Firewall', name=u'ExtConfig')
vnsCfgRelInst3 = cobra.model.vns.CfgRelInst(vnsFolderInst20, mandatory=u'no', name=u'ExtConfigrel', key=u'ExIntfConfigRel', locked=u'no', cardinality=u'unspecified', targetName=u'externalIf')
fvCrtrn = cobra.model.fv.Crtrn(fvAEPg, ownerKey=u'', name=u'default', descr=u'', prec=u'0', ownerTag=u'', match=u'any')
fvRsProv = cobra.model.fv.RsProv(fvAEPg, tnVzBrCPName=u'Con_Ten_Windows', matchT=u'AtleastOne', prio=u'unspecified')
fvRsProv2 = cobra.model.fv.RsProv(fvAEPg, tnVzBrCPName=u'Con_Ten_DB', matchT=u'AtleastOne', prio=u'unspecified')
fvAEPg2 = cobra.model.fv.AEPg(fvAp, isAttrBasedEPg=u'no', matchT=u'AtleastOne', prio=u'unspecified', name=u'EPG-1', descr=u'')
fvRsDomAtt2 = cobra.model.fv.RsDomAtt(fvAEPg2, instrImedcy=u'immediate', resImedcy=u'immediate', encap=u'unknown', tDn=u'uni/vmmp-VMware/dom-VMM_ACI_vDVS_1')
fvRsCustQosPol2 = cobra.model.fv.RsCustQosPol(fvAEPg2, tnQosCustomPolName=u'')
fvRsBd2 = cobra.model.fv.RsBd(fvAEPg2, tnFvBDName=u'BD_10-54-62-129_29')
fvCrtrn2 = cobra.model.fv.Crtrn(fvAEPg2, ownerKey=u'', name=u'default', descr=u'', prec=u'0', ownerTag=u'', match=u'any')
fvRsProv3 = cobra.model.fv.RsProv(fvAEPg2, tnVzBrCPName=u'Con_Ten_Windows', matchT=u'AtleastOne', prio=u'unspecified')
fvRsProv4 = cobra.model.fv.RsProv(fvAEPg2, tnVzBrCPName=u'Con_Ten_HTTP', matchT=u'AtleastOne', prio=u'unspecified')
vnsLDevVip = cobra.model.vns.LDevVip(fvTenant, managed=u'yes', name=u'ASAv', svcType=u'OTHERS', funcType=u'GoTo', devtype=u'VIRTUAL', contextAware=u'single-Context', mode=u'legacy-Mode')
vnsRsMDevAtt = cobra.model.vns.RsMDevAtt(vnsLDevVip, tDn=u'uni/infra/mDev-CISCO-ASA-1.2')
vnsCCred = cobra.model.vns.CCred(vnsLDevVip, name=u'username', value=u'admin')
vnsCCredSecret = cobra.model.vns.CCredSecret(vnsLDevVip, name=u'password')
vnsRsALDevToDomP = cobra.model.vns.RsALDevToDomP(vnsLDevVip, tDn=u'uni/vmmp-VMware/dom-VMM_ACI_vDVS_1')
vnsCMgmt = cobra.model.vns.CMgmt(vnsLDevVip, host=u'10.54.60.248', name=u'', port=u'443')
vnsCDev = cobra.model.vns.CDev(vnsLDevVip, vcenterName=u'cphlab-vcenter2.cisco.com', vmName=u'ACI-ASAv', name=u'ASAv_Device_1', devCtxLbl=u'')
vnsCCred2 = cobra.model.vns.CCred(vnsCDev, name=u'username', value=u'admin')
vnsCCredSecret2 = cobra.model.vns.CCredSecret(vnsCDev, name=u'password')
vnsCMgmt2 = cobra.model.vns.CMgmt(vnsCDev, host=u'10.54.60.248', name=u'', port=u'443')
vnsCIf = cobra.model.vns.CIf(vnsCDev, name=u'GigabitEthernet0/1', vnicName=u'Network adapter 3')
vnsCIf2 = cobra.model.vns.CIf(vnsCDev, name=u'GigabitEthernet0/0', vnicName=u'Network adapter 2')
vnsCIf3 = cobra.model.vns.CIf(vnsCDev, name=u'Management0/0', vnicName=u'Network adapter 1')
vnsRsCDevToCtrlrP = cobra.model.vns.RsCDevToCtrlrP(vnsCDev, tDn=u'uni/vmmp-VMware/dom-VMM_ACI_vDVS_1/ctrlr-cphlab-vcenter2.cisco.com')
vnsLIf = cobra.model.vns.LIf(vnsLDevVip, name=u'mgmt', encap=u'unknown')
vnsRsMetaIf = cobra.model.vns.RsMetaIf(vnsLIf, tDn=u'uni/infra/mDev-CISCO-ASA-1.2/mIfLbl-mgmt')
vnsRsCIfAttN = cobra.model.vns.RsCIfAttN(vnsLIf, tDn=u'uni/tn-tenant1/lDevVip-ASAv/cDev-ASAv_Device_1/cIf-[Management0/0]')
vnsLIf2 = cobra.model.vns.LIf(vnsLDevVip, name=u'external', encap=u'unknown')
vnsRsMetaIf2 = cobra.model.vns.RsMetaIf(vnsLIf2, tDn=u'uni/infra/mDev-CISCO-ASA-1.2/mIfLbl-external')
vnsRsCIfAttN2 = cobra.model.vns.RsCIfAttN(vnsLIf2, tDn=u'uni/tn-tenant1/lDevVip-ASAv/cDev-ASAv_Device_1/cIf-[GigabitEthernet0/1]')
vnsLIf3 = cobra.model.vns.LIf(vnsLDevVip, name=u'internal', encap=u'unknown')
vnsRsMetaIf3 = cobra.model.vns.RsMetaIf(vnsLIf3, tDn=u'uni/infra/mDev-CISCO-ASA-1.2/mIfLbl-internal')
vnsRsCIfAttN3 = cobra.model.vns.RsCIfAttN(vnsLIf3, tDn=u'uni/tn-tenant1/lDevVip-ASAv/cDev-ASAv_Device_1/cIf-[GigabitEthernet0/0]')
ospfIfPol = cobra.model.ospf.IfPol(fvTenant, nwT=u'p2p', ownerKey=u'', name=u'IntPol_OSPF_P2P', descr=u'', ctrl=u'', helloIntvl=u'10', rexmitIntvl=u'5', xmitDelay=u'1', cost=u'unspecified', ownerTag=u'', prio=u'1', deadIntvl=u'40')
l3extOut = cobra.model.l3ext.Out(fvTenant, ownerKey=u'', name=u'L3out_External_VRF_1', descr=u'', targetDscp=u'unspecified', enforceRtctrl=u'export', ownerTag=u'')
l3extRsEctx = cobra.model.l3ext.RsEctx(l3extOut, tnFvCtxName=u'VRF_1')
l3extLNodeP = cobra.model.l3ext.LNodeP(l3extOut, ownerKey=u'', name=u'NP_Leaf101', descr=u'', targetDscp=u'unspecified', tag=u'yellow-green', ownerTag=u'')
l3extRsNodeL3OutAtt = cobra.model.l3ext.RsNodeL3OutAtt(l3extLNodeP, rtrIdLoopBack=u'yes', rtrId=u'111.111.111.111', tDn=u'topology/pod-1/node-101')
l3extLoopBackIfP = cobra.model.l3ext.LoopBackIfP(l3extRsNodeL3OutAtt, addr=u'111.111.111.111', descr=u'', name=u'')
l3extLIfP = cobra.model.l3ext.LIfP(l3extLNodeP, ownerKey=u'', tag=u'yellow-green', name=u'IntProf_OSPF', descr=u'', ownerTag=u'')
ospfIfP = cobra.model.ospf.IfP(l3extLIfP, authKeyId=u'1', authType=u'none', name=u'', descr=u'')
ospfRsIfPol = cobra.model.ospf.RsIfPol(ospfIfP, tnOspfIfPolName=u'IntPol_OSPF_P2P')
l3extRsNdIfPol = cobra.model.l3ext.RsNdIfPol(l3extLIfP, tnNdIfPolName=u'default')
l3extRsPathL3OutAtt = cobra.model.l3ext.RsPathL3OutAtt(l3extLIfP, addr=u'10.54.63.8/31', descr=u'', encapScope=u'local', targetDscp=u'unspecified', llAddr=u'::', mac=u'00:22:BD:F8:19:FF', mode=u'regular', encap=u'vlan-1151', ifInstT=u'sub-interface', mtu=u'9000', tDn=u'topology/pod-1/paths-101/pathep-[eth1/48]')
l3extRsL3DomAtt = cobra.model.l3ext.RsL3DomAtt(l3extOut, tDn=u'uni/l3dom-L3dom_External')
l3extInstP = cobra.model.l3ext.InstP(l3extOut, prio=u'unspecified', matchT=u'AtleastOne', name=u'Ext_L3_OSPF', descr=u'', targetDscp=u'unspecified')
fvRsCons = cobra.model.fv.RsCons(l3extInstP, tnVzBrCPName=u'Con_Ten_Windows', prio=u'unspecified')
fvRsCons2 = cobra.model.fv.RsCons(l3extInstP, tnVzBrCPName=u'Con_Ten_HTTP', prio=u'unspecified')
fvRsCons3 = cobra.model.fv.RsCons(l3extInstP, tnVzBrCPName=u'Con_Ten_DB', prio=u'unspecified')
l3extSubnet = cobra.model.l3ext.Subnet(l3extInstP, aggregate=u'', ip=u'0.0.0.0/0', name=u'', descr=u'')
fvRsCustQosPol3 = cobra.model.fv.RsCustQosPol(l3extInstP, tnQosCustomPolName=u'')
ospfExtP = cobra.model.ospf.ExtP(l3extOut, areaCtrl=u'redistribute,summary', areaId=u'backbone', areaType=u'regular', areaCost=u'1', descr=u'')


# commit the generated code to APIC
print toXMLStr(topMo)
c = cobra.mit.request.ConfigRequest()
c.addMo(topMo)
md.commit(c)

